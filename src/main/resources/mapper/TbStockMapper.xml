<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsj.dao.TbStockMapper">
  <resultMap id="BaseResultMap" type="com.lsj.entity.TbStock">
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <result column="c_uid" jdbcType="BIGINT" property="cUid" />
    <result column="b_uid" jdbcType="BIGINT" property="bUid" />
    <result column="s_name" jdbcType="VARCHAR" property="sName" />
    <result column="s_count" jdbcType="BIGINT" property="sCount" />
    <result column="s_onSale" jdbcType="INTEGER" property="sOnsale" />
    <result column="s_insTime" jdbcType="TIMESTAMP" property="sInstime" />
    <result column="s_uptTime" jdbcType="TIMESTAMP" property="sUpttime" />
  </resultMap>
  
  <sql id="Base_Column_List">
    uid, c_uid, b_uid, s_name, s_count, s_onSale, s_insTime, s_uptTime
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_stock
    where uid = #{uid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_stock
    where uid = #{uid,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.lsj.entity.TbStock">
    insert into tb_stock (uid, c_uid, b_uid, 
      s_name, s_count, s_onSale, 
      s_insTime, s_uptTime)
    values (#{uid,jdbcType=BIGINT}, #{cUid,jdbcType=BIGINT}, #{bUid,jdbcType=BIGINT}, 
      #{sName,jdbcType=VARCHAR}, #{sCount,jdbcType=BIGINT}, #{sOnsale,jdbcType=INTEGER}, 
      #{sInstime,jdbcType=TIMESTAMP}, #{sUpttime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lsj.entity.TbStock">
    insert into tb_stock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="cUid != null">
        c_uid,
      </if>
      <if test="bUid != null">
        b_uid,
      </if>
      <if test="sName != null">
        s_name,
      </if>
      <if test="sCount != null">
        s_count,
      </if>
      <if test="sOnsale != null">
        s_onSale,
      </if>
      <if test="sInstime != null">
        s_insTime,
      </if>
      <if test="sUpttime != null">
        s_uptTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="cUid != null">
        #{cUid,jdbcType=BIGINT},
      </if>
      <if test="bUid != null">
        #{bUid,jdbcType=BIGINT},
      </if>
      <if test="sName != null">
        #{sName,jdbcType=VARCHAR},
      </if>
      <if test="sCount != null">
        #{sCount,jdbcType=BIGINT},
      </if>
      <if test="sOnsale != null">
        #{sOnsale,jdbcType=INTEGER},
      </if>
      <if test="sInstime != null">
        #{sInstime,jdbcType=TIMESTAMP},
      </if>
      <if test="sUpttime != null">
        #{sUpttime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>



  <update id="updateByPrimaryKeySelective" parameterType="com.lsj.entity.TbStock">
    update tb_stock
    <set>
      <if test="cUid != null">
        c_uid = #{cUid,jdbcType=BIGINT},
      </if>
      <if test="bUid != null">
        b_uid = #{bUid,jdbcType=BIGINT},
      </if>
      <if test="sName != null">
        s_name = #{sName,jdbcType=VARCHAR},
      </if>
      <if test="sCount != null">
        s_count = #{sCount,jdbcType=BIGINT},
      </if>
      <if test="sOnsale != null">
        s_onSale = #{sOnsale,jdbcType=INTEGER},
      </if>
      <if test="sInstime != null">
        s_insTime = #{sInstime,jdbcType=TIMESTAMP},
      </if>
      <if test="sUpttime != null">
        s_uptTime = #{sUpttime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where uid = #{uid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lsj.entity.TbStock">
    update tb_stock
    set c_uid = #{cUid,jdbcType=BIGINT},
      b_uid = #{bUid,jdbcType=BIGINT},
      s_name = #{sName,jdbcType=VARCHAR},
      s_count = #{sCount,jdbcType=BIGINT},
      s_onSale = #{sOnsale,jdbcType=INTEGER},
      s_insTime = #{sInstime,jdbcType=TIMESTAMP},
      s_uptTime = #{sUpttime,jdbcType=TIMESTAMP}
    where uid = #{uid,jdbcType=BIGINT}
  </update>
</mapper>